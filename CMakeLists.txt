cmake_minimum_required(VERSION 2.6)

project(MOOR)

MACRO (APPEND_CMAKE_INSTALL_RPATH RPATH_DIRS)
  IF (NOT ${ARGC} EQUAL 1)
    MESSAGE(SEND_ERROR "APPEND_CMAKE_INSTALL_RPATH takes 1 argument")
  ENDIF (NOT ${ARGC} EQUAL 1)
  FOREACH ( RPATH_DIR ${RPATH_DIRS} )
    IF ( NOT ${RPATH_DIR} STREQUAL "" )
       FILE( TO_CMAKE_PATH ${RPATH_DIR} RPATH_DIR )
       STRING( SUBSTRING ${RPATH_DIR} 0 1 RPATH_FIRST_CHAR )
       IF ( NOT ${RPATH_FIRST_CHAR} STREQUAL "/" )
         SET ( RPATH_DIR "$ORIGIN/${RPATH_DIR}:$$ORIGIN/${RPATH_DIR}" )
         SET ( CMAKE_EXE_LINKER_FLAGS
               "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,'${RPATH_DIR}'" )
         SET ( CMAKE_SHARED_LINKER_FLAGS
               "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-rpath,'${RPATH_DIR}'" )
       ELSE ( NOT ${RPATH_FIRST_CHAR} STREQUAL "/" )
         SET ( CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_RPATH}:${RPATH_DIR}" )
       ENDIF ( NOT ${RPATH_FIRST_CHAR} STREQUAL "/" )
    ENDIF ( NOT ${RPATH_DIR} STREQUAL "" )
  ENDFOREACH ( RPATH_DIR )
ENDMACRO ( APPEND_CMAKE_INSTALL_RPATH )

APPEND_CMAKE_INSTALL_RPATH("/opt/lib${LIB_SUFFIX};/usr/local/lib${LIB_SUFFIX};/usr/lib${LIB_SUFFIX}")

if(DEFINED ENABLE_LIB64)
    if(ENABLE_LIB64)
      set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS TRUE)
    else(ENABLE_LIB64)
      set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS FALSE)
    endif(ENABLE_LIB64)
else(DEFINED ENABLE_LIB64)
    execute_process(COMMAND test -d /lib64 -a ! -L /lib64
    RESULT_VARIABLE result
    )
    if(NOT result)
      set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS TRUE)
    else(NOT result)
      set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS FALSE)
    endif(NOT result)
endif(DEFINED ENABLE_LIB64)

option(ENABLE_GUI "Kompilacja wraz z Qmoorie")


add_subdirectory(src)

message(STATUS)
message(STATUS "ENABLE_GUI = ${ENABLE_GUI}")
message(STATUS)

set(ENABLE_GUI ${ENABLE_GUI} CACHE BOOL
		"Set to ON to build with Qmoorie" FORCE)

CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
  IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
  "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
